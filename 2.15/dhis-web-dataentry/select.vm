<script type="text/javascript">
var i18n_select_data_set = '$encoder.jsEscape( $i18n.getString( "select_data_set" ) , "'")';
var i18n_select_period = '$encoder.jsEscape( $i18n.getString( "select_period" ) , "'")';
var i18n_select_option = '$encoder.jsEscape( $i18n.getString( "select_option" ) , "'")';
var i18n_register_complete_dataset_success = '$encoder.jsEscape( $i18n.getString( "register_complete_dataset_success" ) , "'")';
var i18n_register_complete_dataset_failed = '$encoder.jsEscape( $i18n.getString( "register_complete_dataset_failed" ) , "'")';
var i18n_undo_register_complete_dataset_success = '$encoder.jsEscape( $i18n.getString( "undo_register_complete_dataset_success" ) , "'")';
var i18n_value_of_data_element_less = '$encoder.jsEscape( $i18n.getString( "value_of_data_element_less" ) , "'")';
var i18n_value_of_data_element_greater = '$encoder.jsEscape( $i18n.getString( "value_of_data_element_greater" ) , "'")';
var i18n_value_too_long = '$encoder.jsEscape( $i18n.getString( "value_is_too_long" ) , "'")';
var i18n_value_must_integer = '$encoder.jsEscape( $i18n.getString( "value_must_integer" ) , "'")';
var i18n_value_must_number = '$encoder.jsEscape( $i18n.getString( "value_must_number" ) , "'")';
var i18n_value_must_positive_integer = '$encoder.jsEscape( $i18n.getString( "value_must_positive_integer" ) , "'")';
var i18n_value_must_zero_or_positive_integer = '$encoder.jsEscape( $i18n.getString( "value_must_zero_or_positive_integer" ) , "'")';
var i18n_value_must_negative_integer = '$encoder.jsEscape( $i18n.getString( "value_must_negative_integer" ) , "'")';
var i18n_value_must_unit_interval = '$encoder.jsEscape( $i18n.getString( "value_must_unit_interval" ) , "'")';
var i18n_field_unallowed_save_zero = '$encoder.jsEscape( $i18n.getString( "field_unallowed_save_zero" ) , "'")';
var i18n_saving_value_failed_status_code = '$encoder.jsEscape( $i18n.getString( "saving_value_failed_status_code" ) , "'")';
var i18n_saving_value_failed_dataset_is_locked = '$encoder.jsEscape( $i18n.getString( "saving_value_failed_dataset_is_locked" ) , "'")';
var i18n_saving_comment_failed_status_code = '$encoder.jsEscape( $i18n.getString( "saving_comment_failed_status_code" ) , "'")';
var i18n_saving_minmax_failed_error_code = '$encoder.jsEscape( $i18n.getString( "saving_minmax_failed_error_code" ) , "'")';
var i18n_confirm_complete = '$encoder.jsEscape( $i18n.getString( "confirm_complete" ) , "'")';
var i18n_confirm_undo = '$encoder.jsEscape( $i18n.getString( "confirm_undo" ) , "'")';
var i18n_no_response_from_server = '$encoder.jsEscape( $i18n.getString( "no_response_from_server" ) , "'")';
var i18n_enter_digits = '$encoder.jsEscape( $i18n.getString( "enter_digits" ) , "'")';
var i18n_max_must_be_greater_than_min = '$encoder.jsEscape( $i18n.getString( "max_must_be_greater_than_min" ) , "'")';
var i18n_mark_value_for_followup = '$encoder.jsEscape( $i18n.getString( "mark_value_for_followup" ) , "'")';
var i18n_unmark_value_for_followup = '$encoder.jsEscape( $i18n.getString( "unmark_value_for_followup" ) , "'")';
var i18n_operation_not_available_offline = '$encoder.jsEscape( $i18n.getString( "operation_not_available_offline" ) , "'")';
var i18n_online_notification = '$encoder.jsEscape( $i18n.getString( "online_notification" ) , "'")';
var i18n_offline_notification = '$encoder.jsEscape( $i18n.getString( "offline_notification" ) , "'")';
var i18n_need_to_sync_notification = '$encoder.jsEscape( $i18n.getString( "need_to_sync_notification" ) , "'")';
var i18n_sync_now = '$encoder.jsEscape( $i18n.getString( "sync_now" ) , "'")';
var i18n_sync_success = '$encoder.jsEscape( $i18n.getString( "sync_success" ) , "'")';
var i18n_sync_failed = '$encoder.jsEscape( $i18n.getString( "sync_failed" ) , "'")';
var i18n_uploading_data_notification = '$encoder.jsEscape( $i18n.getString( "uploading_data_notification" ) , "'")';
var i18n_ajax_login_failed = '$encoder.jsEscape( $i18n.getString( "ajax_login_failed" ) , "'")';
var i18n_no_dataelement_selected = '$encoder.jsEscape( $i18n.getString( "no_dataelement_selected" ) , "'")';
var i18n_dataset_is_locked = '$encoder.jsEscape( $i18n.getString( "dataset_is_locked" ) , "'")';
var i18n_register_complete_failed_dataset_is_locked = '$encoder.jsEscape( $i18n.getString( "register_complete_failed_dataset_is_locked" ) , "'")';
var i18n_unregister_complete_failed_dataset_is_locked = '$encoder.jsEscape( $i18n.getString( "unregister_complete_failed_dataset_is_locked" ) , "'")';
var i18n_show_all_sections = '$encoder.jsEscape( $i18n.getString( "show_all_sections" ) , "'")';
var i18n_show_all_items = '$encoder.jsEscape( $i18n.getString( "show_all_items" ) , "'")';
var i18n_all_values_for_data_element_must_be_filled = '$encoder.jsEscape( $i18n.getString( "all_values_for_data_element_must_be_filled" ) , "'")';
var i18n_validation_result = '$encoder.jsEscape( $i18n.getString( "validation_result" ) , "'")';
var i18n_successful_validation = '$encoder.jsEscape( $i18n.getString( "successful_validation" ) , "'")';
var i18n_no_organisationunit_selected = '$encoder.jsEscape( $i18n.getString( "no_organisationunit_selected" ) , "'")';
var i18n_childrens_forms = '$encoder.jsEscape( $i18n.getString( "childrens_forms" ) , "'")';
var i18n_no_periods_click_prev_year_button = '$encoder.jsEscape( $i18n.getString( "no_periods_click_prev_year_button" ) , "'")';
var i18n_view_comment = '$encoder.jsEscape( $i18n.getString( "view_comment" ) , "'")';
var i18n_no_orgunits = '$encoder.jsEscape( $i18n.getString( "no_orgunits" ) , "'")';
</script>

<script>
var selMonth=new Date().getMonth()+1;
var selYear=new Date().getFullYear();
var yearDiff=0;
var yr = new Date().getFullYear();
var today = new Date();

/*
$(document).ready(function(){
	
    changeMonth();
});
*/

function changeDate()
{
	if(document.getElementById('sample2'))
	document.getElementById('sample2').id="selectedPeriodId";

	var dateFormat = 'yyyy-MM-dd';
	var cyear = new Date().getFullYear()+yearDiff;
	
	var cmonth=selMonth;
	//alert
	
	document.getElementById('selectMonths').selectedIndex=cmonth-1;
	
	var cDate = new Date(cyear+'-01-01');
	var selFirstDate = cDate;
	var cday = cDate.getDay();
	displayMonths(cyear);
	
	var periods = [];
	
        var i = 0;
		var x = 0;
		
		if(cyear=="2016")
		{
		if(selMonth=="01")
		{
			//setting the first day to monday
			if( cday == 1 ) // Monday
			{
				
			}
			else if( cday == 0 ) // sunday
			{
				cDate.setDate( cDate.getDate() - 6 );
			}
			else // others
			{
				cDate.setDate( cday - 1 );
			}
		}
		else
		{
			//setting the first day to monday
			if ( cday == 0 ) // Sunday
			{
				cDate.setDate(2);
			
				//i=1;
			}
			else if ( cday == 1 ) // Monday
			{
				
			}
			else // others
			{
				cDate.setDate(( 9 - cday ) );
				//i=1;
			}
		}
		}
		
		else{
		
			if(selMonth=="01")
		{
			//setting the first day to monday
			if( cday == 1 ) // Monday
			{
				
			}
			else if( cday == 0 ) // sunday
			{
				cDate.setDate( cDate.getDate() - 6 );
			}
			else // others
			{
				cDate.setDate( cDate.getDate() - cday + 1 );
			}
		}
		else
		{
			//setting the first day to monday
			if ( cday == 0 ) // Sunday
			{
				cDate.setDate(2);
				//console.log("2"+cDate);
				i=1;
			}
			else if ( cday == 1 ) // Monday
			{
				//console.log("cday"+cday);
				
			}
			else // others
			{
				cDate.setDate(( 9 - cday ) );
			
				i=1;
			}
		}
		}
			
		//alert(cDate);
		
		var tempDate = cDate;
        while ( cDate.getFullYear() <= cyear)
        {
				//individual values after adjusting
				//lower limit ********************************************************
				if(cDate.getDate()<10)
					var pdate="0"+cDate.getDate();
				else
					var pdate=cDate.getDate();
				
				var m = cDate.getMonth();
				if(m<9)
					var pmonth="0"+(cDate.getMonth()+1);
				else
					var pmonth=cDate.getMonth()+1;
				
				var pyear=cDate.getFullYear();
				var pfulldate=pyear+'-'+pmonth+'-'+pdate;
				
				//upper limit ********************************************************
				cDate.setDate(cDate.getDate()+6)
				if((cDate.getDate())<10)
					var pdate1="0"+cDate.getDate();
				else
					var pdate1=cDate.getDate();
				
				var n = cDate.getMonth();
				if(n<9)
					var pmonth1="0"+(cDate.getMonth()+1);
				else
					var pmonth1=cDate.getMonth()+1;
				
				var pyear1=cDate.getFullYear();
				var pfulldate2=pyear1+'-'+pmonth1+'-'+pdate1;
				//*********************************************************************
				cDate.setDate(cDate.getDate()+1);
				//console.log("pfulldate2"+pfulldate2);
				var period;
				var namee = 'W' + ( x + 1 ) + ' - ' + pfulldate+' - '+pfulldate2;
				
				var id = cyear+'W'+(i+1);			
				period= {name:namee, id:id};
				

				
			
			
				
				if((cmonth==pmonth && today>=cDate && cyear >= pyear1)||(cmonth==1 && pmonth==12  && today>=cDate && selFirstDate>=cDate  && cyear > pyear))
				{
					//alert(cmonth+" +++++ "+pmonth+" +++++ "+today+"+++++++ "+cDate);
					periods[x] = period;
					
					
					x++;
				}
				i++;
				if(cmonth=="12")
				{
				periods[x] = period}
				
				//alert ("i : "+i+" x: "+x);
				
				 tempDate = cDate;

			displayDate(periods);
		}
}
	function displayDate(cperiods)
	{
		clearOptions();
		
		if ( cperiods.length > 0 )
		{
			addOptionDate( 'selectedPeriodId', '-1', '[ Select Week ]' );
			//console.log(selectedPeriodId);
		}
		else
		{
			addOptionDate( 'selectedPeriodId', '-1', '[ Invalid ]' );
		}
		
		for(var i=0; i<cperiods.length; i++) 
		{
			var item=cperiods[i];
			//alert("periods : "+item.name+" "+item.id);
			addOptionDate( 'selectedPeriodId', item.id, item.name );
		}
	}

	function addOptionDate(list, optionValue, optionText)
	{
		var select = document.getElementById(list);
		var option = document.createElement( "option" );
		option.value = optionValue;
		option.text = optionText;
		select.add( option, null );
	}	

	function changeMonth()
	{
		var e=document.getElementById('selectMonths');
		selMonth=e.options[e.selectedIndex].value
		changeDate();
		verifyPeriod();
	}

	function clearOptions()
	{
		var select = document.getElementById("selectedPeriodId");
		var length = select.options.length;
		for (i = 0; i < length; i++)
		select.remove(select.selectedIndex);
	}

	function displayMonths(nyear)
	{
		var selectobject1=document.getElementById("selectMonths");
		for (var i=0; i<12;i++)
		{
			selectobject1.remove(selectobject1.selectedIndex);
		}
		
		var monthss=["January","February","March","April","May","June","July","August","September","October","November","December"];
		var valMonths=["01","02","03","04","05","06","07","08","09","10","11","12"];
		
		for(var m=0; m<12; m++)
		{
			var option = document.createElement( "option" );
			option.value = valMonths[m];
			option.text = monthss[m];
			selectobject1.add( option, null );
		
		}
		for(var n=12; n>0; n--)
		{
			var selectobject=document.getElementById("selectMonths");

			var mDate = new Date(nyear+'-'+n+'-01');
			
			//alert(today+"    ------    "+mDate);
			if(today<=mDate)
			{
				selectobject.remove(n-1);
			}
		}
		
		document.getElementById('selectMonths').selectedIndex=selMonth-1;
	}

	function cpreviousYear()
	{
		previousPeriodsSelected();
		yearDiff--;
		changeDate();
		yr--;
		verifyPeriod();
		
		if(yearDiff<0)
		document.getElementById('nextButton2').disabled=false;
		else
		document.getElementById('nextButton2').disabled=true;
	}

	function cnextYear()
	{
		nextPeriodsSelected();
		yearDiff++
		changeDate();
		yr++;
		verifyPeriod();
		
		if(yearDiff<0)
		document.getElementById('nextButton2').disabled=false;
		else
		document.getElementById('nextButton2').disabled=true;
	}

	function verifyPeriod()
	{
		var e=document.getElementById('selectedPeriodId');
		var selVal=e.options[e.selectedIndex].value
		
		if(selVal=='-1')
		{
			clearEntryForm();
		}
		else
		{
			WeeklyPeriodSelected();
		}
	}

	function WeeklyPeriodSelected()
	{
		var periodName = $( '#selectedPeriodId :selected' ).text();
		var dataSetId = $( '#selectedDataSetId' ).val();

		
		$( '#currentPeriod' ).html( periodName );

		var periodId = $( '#selectedPeriodId' ).val();
		//alert(periodId);
		
		if ( dhis2.de.inputSelected() )
		{    	
			showLoader();

			if ( dhis2.de.dataEntryFormIsLoaded )
			{
				loadDataValues();
			}
			else
			{
				loadForm();
			}
		}
	}
	</script>

<style type="text/css" media="print">
#moduleHeader, #currentSelection, #actions, #selectionBox, #completenessDiv, .ui-helper-hidden-accessible {
    display: none;
}
</style>

<h3 id="moduleHeader">$i18n.getString( "data_entry" ) #openHelp( "dataEntry" )</h3>

<div id="currentSelection">
	<span id="closeCurrentSelection"><img src="../images/hide.png" title="$i18n.getString( 'close' )" onclick="closeCurrentSelection()"></span>
	<span id="currentOrganisationUnit">$i18n.getString( "no_organisationunit_selected" )</span> - <span id="currentPeriod">$i18n.getString( "no_period_selected" )</span/><br>
	<span id="currentDataElement">$i18n.getString( "no_dataelement_selected" )</span>
</div>

<div id="actions">	
    <input type="button" value="$i18n.getString( 'run_validation' )" onclick="validate( false )" id="validationButton" style="width:120px;" disabled="disabled"/><br>
    <input type="button" value="$i18n.getString( 'print_form' )" onclick="window.print()" id="printButton" style="width:120px"/><br>
    <input type="button" value="$i18n.getString( 'print_blank_form' )" onclick="printBlankForm()" style="width:120px"/><br>                                                                                                                      </br>
</div>

<div id="selectionBox" class="inputCriteria" style="width:564px">
<div class="selectionBoxRow">
    <div class="selectionLabel">$i18n.getString( "organisation_unit" )</div>
    <input type="text" id="selectedOrganisationUnit" readonly="readonly" value="[ $i18n.getString( 'select_from_tree' ) ]" style="width: 394px; padding: 3px;">
</div>
<div class="selectionBoxRow">
	<div class="selectionLabel">$i18n.getString( "data_set" )</div>
	<select id="selectedDataSetId" name="selectedDataSetId" class="selectionBoxSelect" onchange="dataSetSelected()" disabled="disabled"></select>
    <span id="loaderSpan" style="display:none"><img src='../images/ajax-loader-bar.gif'></span>
</div>
<div id="attributeComboDiv"></div>
<div class="selectionBoxRow">
<div class="selectionBoxRow">

		<div id="weekly" style="display:none">			
			<div class="selectionLabel">$i18n.getString( "period" )</div>
			<select id="sample2" name="selectedPeriodId2" class="weeklyperiods" style="width:125px" onchange="verifyPeriod()" style="display:none">
			</select>
			<select id="selectMonths" name="selectedPeriodId" style="width:100px" onchange="changeMonth()">
				<option value='01'> January</option>
				<option value='02'> February </option>
				<option value='03'> March </option>
				<option value='04'> April </option>
				<option value='05'> May </option>
				<option value='06'> June </option>
				<option value='07'> July </option>
				<option value='08'> August </option>
				<option value='09'> September </option>
				<option value='10'> October </option>
				<option value='11'> November </option>
				<option value='12'> December </option>
			</select>
			<input type="button" id="prevButton" style="width:85px" value="Prev Year" title="$i18n.getString('earlier_periods')" onclick="cpreviousYear()">
			<input type="button" id="nextButton2" style="width:85px" value="Next Year" title="$i18n.getString('later_periods')" disabled="disabled" onclick="cnextYear()">
		</div>
		
		<div id="otherPeriods" style="display:none">			
			<div class="selectionLabel">$i18n.getString( "period" )</div>
			<select id="sample" name="selectedPeriodId" class="otherPeriods" style="width:225px" onchange="periodSelected()"></select>
			<input type="button" id="prevButton" style="width:85px" value="$i18n.getString( 'prev_year' )" title="$i18n.getString('earlier_periods')" onclick="previousPeriodsSelected()">
			<input type="button" id="nextButton" style="width:85px" value="$i18n.getString( 'next_year' )" title="$i18n.getString('later_periods')" onclick="nextPeriodsSelected()">
		</div>
</div>
</div>
<div id="filterDataSetSectionDiv" class="selectionBoxRow" style="display:none">
    <div class="selectionLabel">$i18n.getString( "filter_on_section" )</div>
    <select id="filterDataSetSection" name="filterDataSetSection" class="selectionBoxSelect" onchange="filterOnSection()"></select>
</div>
</div>

#parse( "dhis-web-commons/loader/loader.vm" )

<div id="contentDiv" class="page"></div>

<div id="historyDiv" class="page"></div>

<div id="validationDiv" class="page"></div>

<div id="completenessDiv" class="page inputCriteria">
#if( $auth.hasAccess( "dhis-web-dataentry", "registerCompleteDataSet") )
	<input type="button" id="completeButton" name="completeButton" value="$i18n.getString( 'Submit' )" onclick="registerCompleteDataSet()" style="width:120px">
#end
#if( $auth.hasAccess( "dhis-web-dataentry", "undoCompleteDataSet") )
	<input type="button" id="undoButton" name="undoButton" value="$i18n.getString( 'incomplete' )" onclick="undoCompleteDataSet()" style="width:120px">
#end
<span class="separator">&#124</span>
<input type="button" id="validateButton" value="$i18n.getString( 'run_validation' )" onclick="validate( false )" style="width:120px">
</div>

<div id="infoDiv" class="page inputCriteria">
<span class="tipText">$i18n.getString( "completed_by" ): </span><span id="completedBy"></span>
<span class="tipText"> $i18n.getString( "at" ): </span><span id="completedDate"></span>
<a href="javascript:displayUserDetails()">$i18n.getString( "see_details" )</a>
</div>


<div id="completedByDiv" class="page">
<h3><span id="userFullName"></span></h3>
<table>
	<tr>
		<td><label>$i18n.getString( "username" ):</label></td>
		<td><span id="userUsername"></span></td>
	</tr>
	<tr>
		<td><label>$i18n.getString( "email" ):</label></td>
		<td><span id="userEmail"></span></td>
	</tr>
	<tr>
		<td><label>$i18n.getString( "phone_number" ):</label></td>
		<td><span id="userPhoneNumber"></span></td>
	</tr>
	<tr>
		<td><label>$i18n.getString( "organisation_units" ):</label></td>
		<td><span id="userOrganisationUnits"></span></td>
	</tr>
	<tr>
		<td><label>$i18n.getString( "user_roles" ):</label></td>
		<td><span id="userUserRoles"></span></td>
	</tr>
</table>
</div>
